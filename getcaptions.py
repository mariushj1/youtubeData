from youtube_transcript_api import YouTubeTranscriptApifrom youtube_transcript_api.formatters import TextFormatterimport reimport osimport scrapetubeimport requests# Definerer youtube API nøgleAPI_KEY = "AIzaSyBuxcs_NcLoxAfC1gPbssnuj5QDFUZys18"# Definerer kanal idchannel_id = "UCbvwGzSKXa31P6yDRyoNJnA"# Mappe til at gemme filerfolder_path = os.path.join(os.getcwd(), channel_id)# Mappe til at gemme undertekstercaptions_folder_path = os.path.join(folder_path, "captions")# Checker om mappen eksistererif not os.path.exists(folder_path):    # Laver mappe hvis den ikke eksisterer    os.makedirs(folder_path)    print("Main folder created successfully.")else:    print("Main folder already exists.")# Checker om mappen eksistererif not os.path.exists(captions_folder_path):    # Laver mappen hvis den ikke eksiterer    os.makedirs(captions_folder_path)    print("Captions folder created successfully.")else:    print("Captions folder already exists.")# Laver funktion til at gemme video id's som listedef get_video_ids(channel_id):    videos = scrapetube.get_channel(channel_id)    video_ids = [video['videoId'] for video in videos]    return video_ids# Indhenter video URL's for kanalurls = get_video_ids(channel_id)# Laver tælleresuccessful_videos = 0error_videos = 0# Looper igennem hvert URLfor url in urls:    try:        # Finder video ID         video_id = url.split("=")[-1]        # GIndhenter undertekster for video        captions = YouTubeTranscriptApi.get_transcript(video_id)        # Formaterer undertekster        formatter = TextFormatter()        text_formatted = formatter.format_transcript(captions)        # Renser teksen        text_formatted = text_formatted.replace("\n", " ")        text_formatted = re.sub(r'\[.*?\]', '', text_formatted)        text_formatted = re.sub(r'\b(\w+)\b', lambda match: match.group().lower(), text_formatted)        # Gemmer som .txt fil        with open(os.path.join(captions_folder_path, f"{video_id}.txt"), 'w') as file:            file.write(text_formatted)        print(f"Text saved for video {video_id}")        # Tæller antal success        successful_videos += 1    except Exception as e:        print(f"Error processing video {video_id}: {e}")        # Tæller antal videoer uden undertekster        error_videos += 1        continue# Print summaryprint(f"Total videos processed: {len(urls)}")print(f"Videos processed successfully: {successful_videos}")print(f"Videos with errors: {error_videos}") # Gemmer billede af kanalurl = f"https://www.googleapis.com/youtube/v3/channels?part=snippet&id={channel_id}&key={API_KEY}"# Laver API requestresponse = requests.get(url)data = response.json()# Henter kanal billede URLimage_url = data['items'][0]['snippet']['thumbnails']['high']['url']# Downloader billedetimage_data = requests.get(image_url).content# Gemmer billedet som en filwith open(os.path.join(folder_path, "channel_image.jpg"), 'wb') as f:    f.write(image_data)    